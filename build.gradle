buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}


plugins {
    id 'java'
    id "org.jetbrains.kotlin.jvm" version "$kotlinVersion"
    id("org.jetbrains.dokka") version "$kotlinVersion"
}


allprojects {
    //version = "0.0.1" // note, version set by jitpack publishing

    repositories {
        mavenCentral()
        maven { url "https://repo.gradle.org/gradle/libs-releases" }
        maven { url "https://jitpack.io" }

        // uncomment for local testing. Please DONT check in with
        // this enabled
        //mavenLocal()
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
        kotlinOptions {
            jvmTarget = "11"
        }
    }

}

subprojects {
    apply plugin: 'kotlin'
    apply plugin: 'maven'
    apply plugin: 'org.jetbrains.dokka'
    apply plugin: 'jacoco'

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    tasks.withType(Test).configureEach {
        useJUnitPlatform()
        reports { junitXml.setEnabled(true) }
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

    dependencies {
        implementation("com.github.jitpack:gradle-simple:1.0")
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion")
        implementation("org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion")
        
        // Jackson for JSON and YAML
        implementation("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion")
        implementation("com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion")


        implementation "com.github.mycordaapp:tasks:$tasksVersion"
        implementation "com.github.mycordaapp:commons:$commonsVersion"
        implementation "com.github.mycordaapp:registry:$registryVersion"
        implementation "com.github.mycordaapp:really-simple-serialisation:$rssVersion"


        testImplementation("com.natpryce:hamkrest:$hamkrestVersion")
        testImplementation("org.junit.jupiter:junit-jupiter:$junitVersion")
        testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
    }

    test {
        // set heap size for the test JVM(s)
        minHeapSize = "128m"
        maxHeapSize = "1024m"
    }

    jacocoTestCoverageVerification {
        violationRules {
            rule {
                limit {
                    minimum = 0.70
                }
            }
        }
    }

}
